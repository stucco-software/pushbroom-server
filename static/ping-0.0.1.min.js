/*! pushbroom.c0 0.0.1 */
!async function(e,t,n){const o=e.location;let s;const r=e.navigator;if(r.userAgent.search(/(bot|spider|crawl|preview)/gi)>-1)return;const i="disablePushbroom",a="addEventListener",d="pushState",l="sendBeacon",u="localStorage",h="Pushbroom is",p=["unblocked","blocked"],v=console.log;c="click";const m=t=>{let n=parseFloat(e[u].getItem(p[1]));return n&&t&&v(h+" blocked on "+o.hostname+" - Use pushbroom.blockMe(0) to unblock"),n},b=(e,t)=>{if(m(t))return new Promise((e=>e()));const n=new XMLHttpRequest;return new Promise(((t,o)=>{n.onreadystatechange=()=>{4===n.readyState&&t(n.response)},n.open("GET",e),n.send()}))},w=e.screen,g="https://ping.pushbroom.co",f=()=>Date.now(),y=()=>$+=f()-S,E=e=>Object.keys(e).map((t=>`${t}=${encodeURIComponent(e[t])}`)).join("&"),k=(e,t)=>{if(!m())return r[l]?void r[l](e,JSON.stringify(t)):b(`${e}?${E(t)}`)};let P,S,$,j;const I=async()=>{if(e[i])return void delete e[i];delete e[i],P=f(),S=P,$=0,j={r:t.referrer,w:w.width,p:o.href},j.r?j.r=j.r:j.r=s;let n=o.hostname;o.pathname;await Promise.all([b(g+"/cache?"+n).then((e=>{j.u=e}))]),s=j.p,b(g+"/hello?"+E(j),!0).then((t=>{e.vid=t}))};t[a]("visibilitychange",(()=>{t.hidden?y():S=f()}));const L=async()=>{e[i]||(!t.hidden&&y(),await k(g+"/duration",{d:$,v:vid}))};e[a]("beforeunload",L);e.history[d]=function(t){let n=history[t];return function(){let o,s=n.apply(this,arguments);return"function"==typeof Event?o=new Event(t):(o=doc.createEvent("Event"),o.initEvent(t,!0,!0)),o.arguments=arguments,e.dispatchEvent(o),s}}(d),e[a](d,(()=>{L(),I()}));let M=e=>e.target.dataset.pushbroom&&pushbroom.event(Object.assign({},e.target.dataset));e.pushbroom={async event(e,t){y();const n={e:e,v:vid,s:c,d:$};await k(g+"/event",n),t&&t()},initEvents(){e.addEventListener(c,M)},blockMe(t){t=t?1:0,e[u].setItem(p[1],t),v(h+" now "+p[t]+" on "+o.hostname)}},I(),pushbroom.initEvents()}(window,document);