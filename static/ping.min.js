!async function(e,t,r){if(e.navigator.userAgent.search(/(bot|spider|crawl|preview)/gi)>-1)return;let n,o,s="pushbroom",a="localStorage",c="target",i="dataset",l="forEach",u="filter",b=e[a].getItem(`${s}:blocked`);const d=e=>{if(b)return new Promise(((e,t)=>{}));const t=new XMLHttpRequest;return new Promise(((r,n)=>{t.onreadystatechange=()=>{4===t.readyState&&r(t.response)},t.open("GET",e),t.send()}))},$=(e,t)=>{let s=`${r}/ping?t=${e}&${(e=>Object.keys(e).map((t=>`${t}=${encodeURIComponent(e[t])}`)).join("&"))(t)}&s=${o}&p=${n}`;return d(s)},w=e=>e.getAttributeNames()[u]((e=>e.startsWith("pb:")||"url"===e)).reduce(((t,r)=>({...t,[r]:e.getAttribute(r)})),{}),g=async e=>{e&&(n=await $("View",w(e)))};let p=new IntersectionObserver(((e,t)=>{e[u]((e=>e.isIntersecting))[l]((e=>$(e[c][i][s],w(e[c]))))}));new MutationObserver((e=>{e[u]((e=>e[c].getAttribute(`data-${s}`)))[l]((e=>{p.observe(e[c])})),t.querySelectorAll(s)[l]((e=>{g(e)}))})).observe(t.body,{subtree:!0,childList:!0});e[s]={block(t){b?(b=null,e[a].removeItem(`${s}:blocked`)):(b=!0,e[a].setItem(`${s}:blocked`,b))}},e.addEventListener("click",(e=>{e[c][i][`${s}:click`]&&$(e[c][i][`${s}:click`],w(e[c]))})),o=await d(`${r}/cache`),await g()}(window,document,"http://localhost:5173");