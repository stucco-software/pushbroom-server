!async function(e,t,r){if(e.navigator.userAgent.search(/(bot|spider|crawl|preview)/gi)>-1)return;let n,o,a="pushbroom",c="localStorage",i="target",s="dataset",l=e[c].getItem(`${a}:blocked`);const u=e=>{if(l)return new Promise(((e,t)=>{}));const t=new XMLHttpRequest;return new Promise(((r,n)=>{t.onreadystatechange=()=>{4===t.readyState&&r(t.response)},t.open("GET",e),t.send()}))},b=(e,t)=>{let a=`${r}/ping?t=${e}&${(e=>Object.keys(e).map((t=>`${t}=${encodeURIComponent(e[t])}`)).join("&"))(t)}&s=${o}&p=${n}`;return u(a)},d=e=>e.getAttributeNames().filter((e=>e.startsWith("pb:")||"url"===e)).reduce(((t,r)=>({...t,[r]:e.getAttribute(r)})),{}),$=async e=>{e&&(n=await b("View",d(e)))};let w=new IntersectionObserver(((e,t)=>{e.filter((e=>e.isIntersecting)).forEach((e=>b(e[i][s][a],d(e[i]))))}));new MutationObserver(((e,r)=>{e.filter((e=>e[i].getAttribute(`data-${a}`))).forEach((e=>{w.observe(e[i])})),t.querySelectorAll(a).forEach((e=>{$(e)}))})).observe(t.body,{subtree:!0,childList:!0});e[a]={block(t){l?(l=null,e[c].removeItem(`${a}:blocked`)):(l=!0,e[c].setItem(`${a}:blocked`,!0))}},e.addEventListener("click",(e=>{e[i][s][`${a}:click`]&&b(e[i][s][`${a}:click`],d(e[i]))})),o=await u(`${r}/cache`),await $()}(window,document,"http://localhost:5173");