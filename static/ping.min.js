!async function(e,t,r){if(e.navigator.userAgent.search(/(bot|spider|crawl|preview)/gi)>-1)return;let n,o,s="pushbroom",i="localStorage",a="target",c="dataset",l="forEach",u="filter",b=e[i].getItem(`${s}:blocked`);const d=e=>{if(b)return new Promise((()=>{}));const t=new XMLHttpRequest;return new Promise((r=>{t.onreadystatechange=()=>{4===t.readyState&&r(t.response)},t.open("GET",e),t.send()}))},p=(e,t)=>{let s=`${r}/ping?t=${e}&${(e=>Object.keys(e).map((t=>`${t}=${encodeURIComponent(e[t])}`)).join("&"))(t)}&s=${o}&p=${n}`;return d(s)},$=e=>e.getAttributeNames()[u]((e=>e.startsWith("pb:")||"url"===e)).reduce(((t,r)=>({...t,[r]:e.getAttribute(r)})),{}),g=async e=>{e&&(n=await p("View",$(e)))};let w=new IntersectionObserver(((e,t)=>{e[u]((e=>e.isIntersecting))[l]((e=>p(e[a][c][s],$(e[a]))))}));new MutationObserver((e=>{e[u]((e=>e[a].getAttribute(`data-${s}`)))[l]((e=>{w.observe(e[a])})),t.querySelectorAll(s)[l]((e=>{g(e)}))})).observe(t.body,{subtree:!0,childList:!0});e[s]={block(t){b?(b=null,e[i].removeItem(`${s}:blocked`)):(b=!0,e[i].setItem(`${s}:blocked`,b))}},e.addEventListener("click",(e=>{e[a][c][`${s}:click`]&&p(e[a][c][`${s}:click`],$(e[a]))})),o=await d(`${r}/cache`),await g()}(window,document,"https://ping.pushbroom.co");