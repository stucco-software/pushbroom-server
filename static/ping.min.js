!async function(e,t,r){if(e.navigator.userAgent.search(/(bot|spider|crawl|preview)/gi)>-1)return;let n,o,i="pushbroom",s="localStorage",a="target",c="dataset",l="forEach",u=e[s].getItem(`${i}:blocked`);const b=e=>{if(u)return new Promise(((e,t)=>{}));const t=new XMLHttpRequest;return new Promise(((r,n)=>{t.onreadystatechange=()=>{4===t.readyState&&r(t.response)},t.open("GET",e),t.send()}))},d=(e,t)=>{let i=`${r}/ping?t=${e}&${(e=>Object.keys(e).map((t=>`${t}=${encodeURIComponent(e[t])}`)).join("&"))(t)}&s=${o}&p=${n}`;return b(i)},$=e=>e.getAttributeNames().filter((e=>e.startsWith("pb:")||"url"===e)).reduce(((t,r)=>({...t,[r]:e.getAttribute(r)})),{}),w=async e=>{e&&(n=await d("View",$(e)))};let g=new IntersectionObserver(((e,t)=>{e.filter((e=>e.isIntersecting))[l]((e=>d(e[a][c][i],$(e[a]))))}));new MutationObserver(((e,r)=>{e.filter((e=>e[a].getAttribute(`data-${i}`)))[l]((e=>{g.observe(e[a])})),t.querySelectorAll(i)[l]((e=>{w(e)}))})).observe(t.body,{subtree:!0,childList:!0});e[i]={block(t){u?(u=null,e[s].removeItem(`${i}:blocked`)):(u=!0,e[s].setItem(`${i}:blocked`,!0))}},e.addEventListener("click",(e=>{e[a][c][`${i}:click`]&&d(e[a][c][`${i}:click`],$(e[a]))})),o=await b(`${r}/cache`),await w()}(window,document,"http://localhost:5173");